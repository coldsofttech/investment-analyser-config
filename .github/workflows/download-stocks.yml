name: Download Ticker Data

on:
  workflow_dispatch:
  schedule:
    - cron: '0 2 * * *'  # Daily at 2 AM UTC

jobs:
  split-stocks:
    runs-on: ubuntu-latest
    if: >
      github.event_name == 'workflow_dispatch' ||
      (github.event_name == 'schedule' && github.ref == 'refs/heads/main')
    outputs:
      matrix: ${{ steps.split.outputs.matrix }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Generate Matrix Chunks
        id: split
        env:
          CHUNK_SIZE: ${{ secrets.CHUNK_SIZE_TICKERS }}
        run: |
          CHUNK_SIZE=${CHUNK_SIZE:-10}
          echo "üî¢ Using CHUNK_SIZE=$CHUNK_SIZE"
          MATRIX=$(python stocks/split_stocks.py stocks/stocks.json "$CHUNK_SIZE")
          echo "matrix=$MATRIX" >> $GITHUB_OUTPUT
  
  run-fetch:
    needs: split-stocks
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{ fromJson(needs.split-stocks.outputs.matrix) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install Dependencies
        run: |
          pip install -r stocks/requirements.txt

      - name: Run Export
        run: |
          python stocks/export_stocks.py --tickers "${{ join(matrix.chunk, ',') }}"

      - name: Upload Artifact
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: stock-${{ github.job }}-${{ strategy.job-index }}
          path: |
            output/stocks/*.json
            output/metadata/tickers_processed.json

  collect-and-push:
    needs: run-fetch
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Git
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"

      - name: Download All Artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Push Stocks JSONs to Target Repo
        if: success()
        env:
          TARGET_REPO_MAIN: ${{ secrets.TARGET_REPO }}
          TARGET_BRANCH_MAIN: ${{ secrets.TARGET_BRANCH }}
          TARGET_REPO_TEST: ${{ secrets.TARGET_REPO_TEST }}
          TARGET_BRANCH_TEST: ${{ secrets.TARGET_BRANCH_TEST }}
          GITHUB_TOKEN: ${{ secrets.TARGET_REPO_PAT }}
        run: |
          echo "üîç Branch is $GITHUB_REF"
          if [[ "$GITHUB_REF" == "refs/heads/main" ]]; then
            TARGET_REPO="$TARGET_REPO_MAIN"
            BRANCH="$TARGET_BRANCH_MAIN"
          elif [[ "$GITHUB_REF" == "refs/heads/test" ]]; then
            TARGET_REPO="$TARGET_REPO_TEST"
            BRANCH="$TARGET_BRANCH_TEST"
          else
            echo "üö´ Workflow not triggered on 'main' or 'test' branch. Exiting..."
            exit 0
          fi
          
          WORKDIR=$(mktemp -d)
          
          echo "üì¶ Cloning target repo..."
          git clone --depth 1 --branch $BRANCH https://x-access-token:${{ secrets.TARGET_REPO_PAT }}@$TARGET_REPO $WORKDIR
          
          echo "üìÇ Creating docs/tickers folder if missing..."
          mkdir -p $WORKDIR/docs/tickers

          echo "üìÇ Copying output files..."
          cp -f artifacts/**/*.json $WORKDIR/docs/tickers/

          cd $WORKDIR
          if git status --porcelain | grep .; then
            git add docs/tickers/*.json
            git commit -m "üìà Update JSONs in docs/tickers/ from ${{ github.repository }} at ${{ github.run_id }}"
            git push origin $BRANCH
            echo "‚úÖ JSONs pushed to $TARGET_REPO docs/tickers/"
          else
            echo "‚ÑπÔ∏è No changes to commit."
          fi